<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.firefly.ragdemo.mapper.DocumentChunkMapper">

    <resultMap id="DocumentChunkResult" type="com.firefly.ragdemo.entity.DocumentChunk">
        <id property="id" column="id" />
        <result property="userId" column="user_id" />
        <result property="fileId" column="file_id" />
        <result property="chunkIndex" column="chunk_index" />
        <result property="content" column="content" />
        <result property="embeddingJson" column="embedding" />
        <result property="createdAt" column="created_at" />
    </resultMap>

    <insert id="insertBatch">
        INSERT INTO document_chunks (id, user_id, file_id, chunk_index, content, embedding, created_at)
        VALUES
        <foreach collection="chunks" item="c" separator=",">
            (#{c.id}, #{c.userId}, #{c.fileId}, #{c.chunkIndex}, #{c.content}, CAST(#{c.embeddingJson} AS jsonb), #{c.createdAt})
        </foreach>
    </insert>

    <!-- 这里使用PostgreSQL的cosine相似度计算，embedding存jsonb数组，查询时转double precision[] 后计算dot/cos。为简化，假设扩展或函数已就绪。若无pgvector，可用L2近似或预先引入pgvector。-->
    <select id="searchTopKByUser" resultMap="DocumentChunkResult">
        SELECT *
        FROM document_chunks
        WHERE user_id = #{userId}
        ORDER BY (
            SELECT SUM(POWER((e.elem)::numeric - (q.elem)::numeric, 2))
            FROM jsonb_array_elements(embedding) WITH ORDINALITY AS e(elem, idx)
            JOIN jsonb_array_elements(CAST(#{queryEmbeddingJson} AS jsonb)) WITH ORDINALITY AS q(elem, idx)
              ON e.idx = q.idx
        ) ASC
        LIMIT #{topK}
    </select>

    <delete id="deleteByFileIdAndUser">
        DELETE FROM document_chunks WHERE file_id = #{fileId} AND user_id = #{userId}
    </delete>
</mapper> 